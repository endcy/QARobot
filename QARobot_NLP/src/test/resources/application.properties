server.port=8111
spring.application.name=QARobotNLPService
#eureka集群配置
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
#分别指向peer1，peer2进行注册(逗号隔开，这里仅一个注册中心)
eureka.client.service-url.defaultZone=http://localhost:8150/eureka
#datasource配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/qarobot
spring.datasource.username=root
spring.datasource.password=NcOVb4IWFVw=
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# 如果重写DataSource的BEAN配置可以通过如下配置解密，解密类需要继承DruidPasswordCallback
# #spring.datasource.passworCallback=com.....
# 连接池的配置信息
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=config,stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrpt=true
# 是否开启任务定时连接检测
spring.datasource.isManualCheckDB=1
#mybatis配置
mybatis.mapperLocations=classpath*:mybatis/sql_*.xml
mybatis.typeAliasesPackage=com.pa.data.bean
#log4j2配置路径
logging.config=classpath:log4j.properties
spring.mvc.view.prefix=classpath:/pages/
spring.mvc.view.suffix=.html